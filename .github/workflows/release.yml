name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  release:
    if: "startsWith(github.ref, 'refs/tags/v')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add Version as environment variable
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
    
      - name: Add version to manifest file
        run: |
          # Change $VERSION in the manifest.yml to the version of the release
          envsubst < manifest.template.yml > manifest_temp.yml && mv manifest_temp.yml manifest.yml

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "latest"
          args: release --clean --skip=validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Copybara
        run: | 
          # Clone the Copybara repository
          git clone --depth=1 https://github.com/google/copybara ${GITHUB_WORKSPACE}/copybara
          # Build the Docker image
          docker build -t google/copybara ${GITHUB_WORKSPACE}/copybara
          
      # - name: Generate token for dummy repo
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const token = await github.apps.createInstallationAccessToken({
      #         installation_id: <TODO>
      #       });
      #       core.exportVariable('DOCS_ATLAS_CLI_TOKEN', token.token);

      # - name: Run Copybara
      #   run: |
      #     # Set up environment variables
      #     export GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
      #     export WORKFLOW=workflow_value # Replace with actual value
      #     ./run-copybara.sh
