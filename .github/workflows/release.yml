name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version_number:
        description: 'Version number (e.g., v1.0.0, v1.0.0-pre, v1.0.0-pre1)'
        required: true
      skip_tests:
        description: 'Set value to `true` to skip tests, default is `false`'
        default: 'false'
      use_existing_tag:
        description: 'Set value to `true` to use an existing tag for the release process, default is `false`'
        default: 'false'

permissions:
  contents: write

jobs:
  release:
    if: "startsWith(github.ref, 'refs/tags/v')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add Version as environment variable
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
    
      - name: Add version to manifest file
        run: |
          # Change $VERSION in the manifest.yml to the version of the release
          envsubst < manifest.template.yml > manifest_temp.yml && mv manifest_temp.yml manifest.yml

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "latest"
          args: release --clean --skip=validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Copybara
        run: | 
          # Clone the Copybara repository
          git clone --depth=1 https://github.com/google/copybara ${GITHUB_WORKSPACE}/copybara
          # Build the Docker image
          docker build -t google/copybara ${GITHUB_WORKSPACE}/copybara
          
      - name: Run Copybara
        env:
          TAG: $(git tag --list 'v*' --sort=-taggerdate | head -1)
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          WORKFLOW: docs-atlas-cli-fork
        run: |
          cd src/github.com/cveticm/atlas-cli-plugin-test/build/ci
          bash ./run-copybara.sh

      #     script: |
      #       const token = await github.apps.createInstallationAccessToken({
      #         installation_id: <TODO>
      #       });
      #       core.exportVariable('DOCS_ATLAS_CLI_TOKEN', token.token);

      # - name: Run Copybara
      #   run: |
      #     # Set up environment variables
      #     export GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
      #     export WORKFLOW=workflow_value # Replace with actual value
      #     ./run-copybara.sh
